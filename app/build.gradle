apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "realm-android"

def getClientSecret() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    return "\"" + properties.getProperty("client.secret") + "\""
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.riningan.wowmount"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "CLIENT_ID", "\"9dbd799cb01a4ce194705b6cbf652875\""
        buildConfigField "String", "CLIENT_SECRET", getClientSecret()
        testInstrumentationRunner = 'android.support.test.runner.AndroidJUnitRunner'
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    packagingOptions {
        exclude 'mockito-extensions/org.mockito.plugins.MockMaker'
    }
    sourceSets {
        String sharedTestDir = 'src/testShared/java'
        test {
            java.srcDirs sharedTestDir
        }
        androidTest {
            java.srcDirs sharedTestDir
        }
    }
}

ext {
    support_version = "28.0.0"
    multidex_version = "2.0.1"
    kodein_version = "5.3.0"
    frarg_version = "1.1"
    moxy_version = "1.5.5"
    rxjava_version = "2.1.0"
//    rxlifecycle_version = "2.2.1"
    retrofit_version = "2.4.0"
    leakcanary_version = "1.6.3"
    mockito_version = "2.8.9"
    powermock_version = "1.7.1"
    support_test_version = "1.0.2"
    mockk_version = "1.9"
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // support
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    // multidex
    implementation "androidx.multidex:multidex:$multidex_version"
    // ktx - need androidx instead support, but moxy doesn't support androidx
//    implementation "androidx.core:core-ktx:1.1.0-alpha03"
    // di
    implementation "org.kodein.di:kodein-di-conf-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-android-core:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-android-support:$kodein_version"
    // navigation
    implementation "ru.terrakok.cicerone:cicerone:3.0.0"
    // frarg
    implementation "com.riningan.frarg:frarg:$frarg_version"
    implementation "com.riningan.frarg:frarg-annotations:$frarg_version"
    kapt "com.riningan.frarg:frarg-processor:$frarg_version"
    // mvp
    implementation "com.arello-mobile:moxy:$moxy_version"
    implementation "com.arello-mobile:moxy-app-compat:$moxy_version"
    kapt "com.arello-mobile:moxy-compiler:$moxy_version"
    // rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava_version"
    // rxlifecycle
//    implementation "com.trello.rxlifecycle2:rxlifecycle:rxlifecycle_version"
//    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rxlifecycle_version"
//    implementation "com.trello.rxlifecycle2:rxlifecycle-components:$rxlifecycle_version"
    // rxbinding
//    implementation "com.jakewharton.rxbinding2:rxbinding:2.1.1"
    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.riningan.retrofit2:converter-csv:1.1"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    // fonts
    implementation "io.github.inflationx:calligraphy3:3.0.0"
    implementation "io.github.inflationx:viewpump:1.0.0"
    // memory leak check
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
//    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
//    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    // image loader
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'
    // circle imageview
    implementation "de.hdodenhof:circleimageview:2.2.0"
    // custom viewpager
    implementation "com.riningan.widget:extendedviewpager:1.2"
    // logger
    implementation "com.riningan.util:logger:1.1"
    // tests
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermock_version"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "org.powermock:powermock-classloading-xstream:$powermock_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
//    testImplementation "org.robolectric:robolectric:4.1"
    androidTestImplementation 'org.awaitility:awaitility:3.1.5'
    androidTestImplementation "com.android.support.test:rules:$support_test_version"
    androidTestImplementation "com.android.support.test:runner:$support_test_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"
}